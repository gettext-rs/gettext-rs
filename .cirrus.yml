freebsd_resource_settings: &freebsd_resource_settings
  cpu: 4
  memory: 8GB

task:
    matrix:
        - name: FreeBSD 13.4
          freebsd_instance:
            image: freebsd-13-4-release-amd64
            << : *freebsd_resource_settings
        - name: FreeBSD 14.2
          freebsd_instance:
            image: freebsd-14-2-release-amd64-ufs
            <<: *freebsd_resource_settings

    cargo_cache:
        # This works in conjunction with after_cache_script and
        # before_cache_script defined below.
        folder: $HOME/cargo-cache
        fingerprint_script:
          - cat gettext-rs/Cargo.toml gettext-sys/Cargo.toml

    env:
        HOME: /home/testuser
        matrix:
          - {} # empty on purpose -- we don't want to set `GETTEXT_SYSTEM`
          - GETTEXT_SYSTEM: 1

    after_cache_script:
      - mkdir $HOME/.cargo || true
      - mv $HOME/cargo-cache/registry/ $HOME/cargo-cache/git/ $HOME/.cargo/ || true
    install_script:
        - pkg update -f
        - pkg upgrade -y
        - pkg install -y rust gmake
        - if [ "x$GETTEXT_SYSTEM" != "x" ]; then pkg install -y gettext gettext-runtime; fi
    setup_script:
        - pw groupadd testgroup
        - pw useradd testuser -g testgroup -w none -m
        - cp -R . $HOME
        - chown -R testuser:testgroup $HOME
    build_script: su testuser -c 'cd ~ && cargo build --verbose'
    test_script: su testuser -c 'cd ~ && RUST_TEST_THREADS=5 RUST_BACKTRACE=1 cargo test'
    before_cache_script:
        # Cirrus CI sometimes fails to unpack the cache. In that case, it
        # removes the "cache folder" and tries again. To work around that,
        # we're storing the cacheble stuff in a separate directory which we
        # move in/out of ~/.cargo before/after the build.
        - mkdir -p $HOME/cargo-cache/git/
        - mv $HOME/.cargo/registry/ $HOME/cargo-cache/ || true
        - mv $HOME/.cargo/git/db/ $HOME/cargo-cache/git/ || true
